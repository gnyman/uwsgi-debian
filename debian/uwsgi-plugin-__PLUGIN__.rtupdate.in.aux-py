#!/bin/sh

set -e

if [ "x$1" = "xrtupdate" ]; then
  # Transform new default Python runtime name from 'pythonX.Y' to 'pythonXY'.
  NEW_RTNAME_DOTLESS="$(echo "$3" | tr -d .)"

  # Versions of Python interpreter which was available at packaging moment
  # (and for which appropriate @@plugin_stem@@*_plugin.so was built).
  KNOWN_PYVERS_DOTLESS="@@plugin_lang_versions_dotless@@"

  DEFAULT_PLUGIN_ALTERNATIVE_PRIORITY=75
  ALT_PLUGIN_ALTERNATIVE_PRIORITY=35

  for MAYBE_NEW_DEFAULT_PYVER_DOTLESS in $KNOWN_PYVERS_DOTLESS; do

    # Check if pythonX.Y runtime (where pythonX.Y is a new default Python
    # version) was available at packaging moment.
    #
    # If it wasn't available, there is no point in changing default alternative
    # (as appropriate @@plugin_stem@@*_plugin.so wasn't built and packaged).
    if [ "x$NEW_RTNAME_DOTLESS" = "xpython$MAYBE_NEW_DEFAULT_PYVER_DOTLESS" ]
    then

      # Reset prorities of all packaged alternatives of
      # @@plugin_stem@@_@@python_kind@@_plugin.so to lower value.
      for PYVER_DOTLESS in $KNOWN_PYVERS_DOTLESS; do
        update-alternatives --quiet \
          --install \
            /usr/lib/uwsgi/plugins/@@plugin_stem@@_@@plugin_lang_kind@@_plugin.so \
            uwsgi-plugin-@@plugin_stem@@_@@plugin_lang_kind@@ \
            /usr/lib/uwsgi/plugins/@@plugin_stem@@_python${PYVER_DOTLESS}_plugin.so \
            $ALT_PLUGIN_ALTERNATIVE_PRIORITY
      done

      # Set higher priority for @@plugin_stem@@*_plugin.so (where pythonX.Y is
      # a new default Python version).
      update-alternatives --quiet \
        --install \
          /usr/lib/uwsgi/plugins/@@plugin_stem@@_@@plugin_lang_kind@@_plugin.so \
          uwsgi-plugin-@@plugin_stem@@_@@plugin_lang_kind@@ \
          /usr/lib/uwsgi/plugins/@@plugin_stem@@_${NEW_RTNAME_DOTLESS}_plugin.so \
          $DEFAULT_PLUGIN_ALTERNATIVE_PRIORITY

      break # for MAYBE_NEW_DEFAULT_PYVER_DOTLESS ...
    fi
  done
fi
